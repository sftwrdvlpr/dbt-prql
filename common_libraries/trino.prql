# ===== GENERIC array_functions.prql =====
# https://spark.apache.org/docs/latest/api/sql/index.html#split
# https://docs.snowflake.com/en/sql-reference/functions/split
# https://trino.io/docs/current/functions/string.html#split
let split = str delimiter -> s"split({str}, {delimiter})"

# ===== GENERIC string_functions.prql =====
# https://spark.apache.org/docs/latest/api/sql/index.html#repeat
# https://docs.snowflake.com/en/sql-reference/functions/repeat
# Trino doesn't have repeat function.
let repeat = str num -> s"repeat({str}, {num})"

# https://spark.apache.org/docs/latest/api/sql/index.html#md5
# https://trino.io/docs/current/functions/binary.html#md5
# https://docs.snowflake.com/en/sql-reference/functions/md5
let md5 = str -> s"md5({str})"

# ===== TRINO array_functions.prql =====
# https://trino.io/docs/current/sql/select.html#unnest
# s-string representing table must contain select statement
let explode = values -> s"select * from unnest({values}) as t(cc)"

# https://trino.io/docs/current/sql/select.html#unnest
# Ordinality starts from 1.
let posexplode = values -> s"select * from unnest({values}) with ordinality as t(value, index)"

# https://trino.io/docs/current/functions/aggregate.html#array_agg
let collect_set = column -> s"array_agg(distinct {column})"

# ===== TRINO bitwise_functions.prql =====
# https://trino.io/docs/current/functions/bitwise.html#bitwise_and
let bitwise_and = operand1 operand2 -> s"bitwise_and({operand1}, {operand2})"


# ===== TRINO date_time_functions.prql =====
# https://trino.io/docs/current/functions/datetime.html#date_add
let date_add = unit:'day' value start_date -> s"date_add({unit}, {value}, TIMESTAMP {start_date})"

# https://trino.io/docs/current/functions/datetime.html#date_diff
let date_diff = unit:'day' start_date end_date -> s"date_diff({unit}, TIMESTAMP {end_date}, TIMESTAMP {start_date})"

# https://trino.io/docs/current/functions/datetime.html#to_unixtime
let to_unixtime = date format:'yyyy-MM-dd HH:mm:ss' part:'epoch' -> s"to_unixtime({date})"

# https://trino.io/docs/current/functions/datetime.html#date_trunc
let date_trunc = format date -> s"date_trunc({format}, TIMESTAMP {date})"

# ===== TRINO grouping_functions.prql =====
# https://trino.io/docs/current/sql/select.html#grouping-operation
let grouping = column -> s"grouping({column})"

let grouping_id = column -> grouping column

# ===== TRINO json_functions.prql =====
# https://trino.io/docs/current/functions/json.html#json_extract_scalar
let get_json_object = json_object path:'' -> s"json_extract_scalar({json_object}, CONCAT('$.', {path}))"

# https://trino.io/docs/current/functions/map.html#map
let make_map = names vals -> s"MAP({names}, {vals})"

# ===== TRINO string_functions.prql =====
# https://trino.io/docs/current/functions/regexp.html#regexp_like
let rlike = column regexp -> s"regexp_like({column}, {regexp})"

# https://trino.io/docs/current/functions/string.html#from_utf8
let from_utf8 = binary -> s"from_utf8({binary})"

# https://trino.io/docs/current/functions/string.html#to_utf8
let to_utf8 = str -> s"to_utf8({str})"

