# ===== GENERIC array_functions.prql =====
# https://spark.apache.org/docs/latest/api/sql/index.html#split
# https://docs.snowflake.com/en/sql-reference/functions/split
# https://trino.io/docs/current/functions/string.html#split
let split = str delimiter -> s"split({str}, {delimiter})"

# ===== GENERIC string_functions.prql =====
# https://spark.apache.org/docs/latest/api/sql/index.html#repeat
# https://docs.snowflake.com/en/sql-reference/functions/repeat
# Trino doesn't have repeat function.
let repeat = str num -> s"repeat({str}, {num})"

# https://spark.apache.org/docs/latest/api/sql/index.html#md5
# https://trino.io/docs/current/functions/binary.html#md5
# https://docs.snowflake.com/en/sql-reference/functions/md5
let md5 = str -> s"md5({str})"

# ===== SNOWFLAKE array_functions.prql =====
# https://docs.snowflake.com/en/sql-reference/functions/flatten
# s-string representing table must contain select statement
let explode = values -> s"select * from lateral flatten(input => {values})"

# https://docs.snowflake.com/en/sql-reference/functions/flatten
# s-string representing table must contain select statement
let posexplode = values -> s"select f.value, f.index from table(flatten(input => {values})) f"

# https://docs.snowflake.com/en/sql-reference/functions/array_agg
let collect_set = column -> s"array_agg(distinct {column})"

# ===== SNOWFLAKE bitwise_functions.prql =====
# https://docs.snowflake.com/en/sql-reference/functions/bitand
let bitwise_and = operand1 operand2 -> s"bitand({operand1}, {operand2})"

# ===== SNOWFLAKE date_time_functions.prql =====
# https://docs.snowflake.com/en/sql-reference/functions/dateadd
let date_add = unit:'day' value start_date -> s"dateadd({unit}, {value}, {start_date})"

# https://docs.snowflake.com/en/sql-reference/functions/datediff
let date_diff = unit:'day' start_date end_date -> s"datediff({unit}, {end_date}::TIMESTAMP, {start_date}::TIMESTAMP)"

# https://docs.snowflake.com/en/sql-reference/functions/date_part
# Use `epoch` date part to get a timestamp.
let to_unixtime = date format:'yyyy-MM-dd HH:mm:ss' part:'epoch' -> s"date_part({part}, {date})"

# https://docs.snowflake.com/en/sql-reference/functions/date_trunc
let date_trunc = format date -> s"date_trunc({format}, {date})"

# ===== SNOWFLAKE grouping_functions.prql =====
# https://docs.snowflake.com/en/sql-reference/functions/grouping_id
let grouping_id = column -> s"grouping_id({column})"

# https://docs.snowflake.com/en/sql-reference/functions/grouping
let grouping = column -> s"grouping({column})"

# ===== SNOWFLAKE json_functions.prql =====
# https://docs.snowflake.com/en/sql-reference/functions/json_extract_path_text
let get_json_object = json_object path:'' -> s"json_extract_path_text({json_object}, {path})"

# https://docs.snowflake.com/en/sql-reference/functions/arrays_to_object
let make_map = names vals -> s"arrays_to_object({names}, {vals})"

# ===== SNOWFLAKE string_functions.prql =====
# https://docs.snowflake.com/en/sql-reference/functions/regexp_like
let rlike = column regexp -> s"regexp_like({column}, {regexp})"

# https://docs.snowflake.com/en/sql-reference/functions/to_char
let from_utf8 = binary -> s"to_varchar({binary}, 'UTF-8')"

# https://docs.snowflake.com/en/sql-reference/functions/to_binary
let to_utf8 = str -> s"to_binary({str}, 'UTF-8')"

